<!DOCTYPE html>
<html>

<head>
  <meta charset=utf-8 />
  <title>Bouncing monster with motion blur</title>

  <style>
      #myCanvas {
          border:1px solid black;
      }
  </style>
</head>

<body onload="init();">
<canvas id="myCanvas" width="400" height="400">
  Your browser does not support the canvas tag.
</canvas>
<p>
  <script>
      var canvas, ctx;
      var x0=100, y0=100, monsterAngle=0, monsterSize=200;
      var x1, x2, x3, y1, y2, y3, xDirection = 1, yDirection=1;

      //var x = [100, 100, 100, 100];
      //var y = [100, 100, 100, 100];
      var x = [];
      var y = [];
      var indexOfContact, i, k, prevK, theta;

      x[0] = 100;
      y[0] = 100;
      indexOfContact = 0;

      function init() {
          // This function is called after the page is loaded
          // 1 - Get the canvas
          canvas = document.getElementById('myCanvas');
          // 2 - Get the context
          ctx=canvas.getContext('2d');
          requestId = requestAnimationFrame(animationLoop);
      }

      function animationLoop() {

          var xMax, yMax, xMin, yMin;

          // 1 - Clear the canvas
          //ctx.clearRect(0, 0, canvas.width, canvas.height);
          ctx.fillStyle = "rgba(240, 0, 240, 0.1)";
          ctx.fillRect (0, 0, canvas.width, canvas.height);

          // 2 Draw the monster using variables for pos, angle, etc.
          drawMonster(x[0], y[0], monsterAngle, 'green', 'yellow');
          // 3 Move the monster (change pos, angle, size, etc.)
          console.log('Contact Index: ' + indexOfContact);
          console.log('x = ' + x[0] + ' ' + x[1] + ' ' + x[2] + ' ' + x[3]);
          console.log('y = ' + y[0] + ' ' + y[1] + ' ' + y[2] + ' ' + y[3]);

          xMax = Math.max(x[0], x[1], x[2], x[3]);
          xMin = Math.min(x[0], x[1], x[2], x[3]);

          if ( xMax >= 400 || xMin <= 0 ) {
              xDirection = - xDirection;
              for (i = 0; i < 4; i++) {
                  if ( ( x[i] == xMax && Math.abs(xMax - 400) < 5 ) || ( x[i] == xMin && Math.abs(xMin - 0) < 5)   ) {
                      console.log('i = ' + i + 'max = ' + xMax + 'min = ' + xMin);
                      indexOfContact = i;

                      if ( Math.abs(xMax - 400) < 5 ) {
                          x[i] = 399;
                      } else {
                          x[i] = 1;
                      }

                  }
              }
          }

          yMax = Math.max(y[0], y[1], y[2], y[3]);
          yMin = Math.min(y[0], y[1], y[2], y[3]);

          if (yMax >= 400 || yMin <= 0) {
              yDirection = - yDirection;
              for (i = 0; i < 4; i++) {
                  if ( ( y[i] == yMax && Math.abs(yMax - 400) < 5 ) || ( y[i] == yMin && Math.abs(yMin - 0) < 5) ) {
                      indexOfContact = i;

                      if (Math.abs(yMax - 400) < 5) {
                          y[i] = 399;
                      } else {
                          y[i] = 1;
                      }


                  }
              }
          }

          x[indexOfContact] += 1 * xDirection;
          y[indexOfContact] += 1 * yDirection;
          monsterAngle+= 0.01;

          for (i = 1; i < 4; i++) {

              k = indexOfContact + i;
              k = k % 4;
              if ( k == 0 ) {
                  prevK = 3;
              }
              else {
                  prevK = k - 1;
              }

              theta = monsterAngle + prevK * Math.PI/2;

              x[k] = parseInt(x[prevK] + monsterSize * Math.cos(theta));
              y[k] = parseInt(y[prevK] + monsterSize * Math.sin(theta));
          }

          requestId = requestAnimationFrame(animationLoop);
      }

      function drawMonster(x, y, angle, headColor, eyeColor) {
          // BEST PRACTICE: SAVE CONTEXT AND RESTORE IT AT THE END
          ctx.save();
          // Moves the coordinate system so that the monster is drawn
          // at position (x, y)
          ctx.translate(x, y);
          ctx.rotate(angle)
          // head
          //ctx.fillStyle=headColor;
          //ctx.fillRect(0,0,monsterSize,monsterSize);

          //ctx.fillStyle='black';
          //ctx.fillRect(80,150,40,10);

          //ctx.fillStyle='black';
          //ctx.fillRect(95,100,10,40);

          //ctx.fillStyle= eyeColor;
          //ctx.fillRect(60,60,20,20);

          ctx.fillStyle= 'black';
          ctx.fillRect(65,65,10,10);

          //ctx.fillStyle= eyeColor;
          //ctx.fillRect(120,60,20,20);

          ctx.fillStyle= 'black';
          ctx.fillRect(125,65,10,10);


          // BEST PRACTICE!
          ctx.restore();
      }

      function start() {
          // Start the animation loop, change 20 for bigger values
          //requestId = setInterval(animationLoop, 100);
          requestId = requestAnimationFrame(animationLoop);
      }
      function stop() {
          if (requestId) {
              //clearInterval(requestId);
              cancelAnimationFrame(requestId);
          }
      }
  </script>
</body>

</html>